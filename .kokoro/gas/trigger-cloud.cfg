# Format: //devtools/kokoro/config/proto/build.proto

# Build logs will be here
action {
  define_artifacts {
    regex: "**/*sponge_log.xml"
  }
}

# Use the trampoline script to run in docker.
build_file: "ruby-common-tools/.kokoro/gas/trigger_trampoline.sh"

# Configure the docker image for kokoro-trampoline.
env_vars: {
  key: "TRAMPOLINE_IMAGE"
  value: "us-central1-docker.pkg.dev/cloud-sdk-release-custom-pool/release-images/ruby-release"
}

# Entrypoint
env_vars: {
  key: "TRAMPOLINE_BUILD_FILE"
  value: ".kokoro/gas/trigger.sh"
}

# List of binary platforms for ruby-cloud builds, colon-delimited.
env_vars: {
  key: "GAS_PLATFORMS"
  value: "aarch64-linux:arm64-darwin:x64-mingw-ucrt:x86-linux:x86-mingw32:x86_64-darwin:x86_64-linux"
}

# List of minor Ruby versions for ruby-cloud builds, colon-delimited.
env_vars: {
  key: "GAS_RUBY_VERSIONS"
  value: "3.1:3.2:3.3:3.4"
}

# Path to the RubyGems API key file for the google-cloud account.
env_vars: {
  key: "GAS_RUBYGEMS_KEY_FILE"
  value: "73713_rubygems-publish-key"
}

# Pick up Rubygems key from internal keystore
before_action {
  fetch_keystore {
    keystore_resource {
      keystore_config_id: 73713
      keyname: "rubygems-publish-key"
      backend: "blade:keystore-fastconfigpush"
    }
  }
}

# Store the packages uploaded to rubygems.org, which
# we can later use to generate SBOMs and attestations.
action {
  define_artifacts {
    regex: "github/ruby-common-tools/gas/artifacts/*.gem"
    strip_prefix: "github/ruby-common-tools/gas/artifacts"
  }
}
